name: Deploy via Bastion Host

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # generate .env file
    - name: Generate .env file
      run: |
        echo "VITE_GOOGLE_API_KEY=${{ secrets.VITE_GOOGLE_API_KEY }}" > Frontend/.env
        echo "VITE_WEATHER_API_KEY=${{ secrets.VITE_WEATHER_API_KEY }}" >> Frontend/.env

    
    # 设置 buildx 构建器
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    
    # 登录 DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 构建并推送镜像
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./Frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/melbourne-cooling-solution

    # 写入 EC2 的私钥（用于 docker pull 阶段的跳板机内部 ssh）
    - name: Write EC2 private key
      run: echo "${{ secrets.EC2_KEY }}" > ec2_key.pem && chmod 600 ec2_key.pem

    # 跳板机连接 EC2 并拉取镜像 + 重启容器
    - name: Deploy to EC2 via Bastion
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.BASTION_HOST }}
        username: ${{ secrets.BASTION_USER }}
        key: ${{ secrets.BASTION_KEY }}
        script: |
          ssh -o StrictHostKeyChecking=no -i FIT5120.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/melbourne-cooling-solution
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend -p 9002:9002 ${{ secrets.DOCKER_USERNAME }}/melbourne-cooling-solution
          EOF
